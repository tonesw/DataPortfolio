/*  A TSQL Procedure that uses a Cursor to recommend books to the user based on 
	other books written by the same author except for the book that was already
	checked out.																*/
CREATE PROCEDURE spRecommend @MYPAT INT AS 
DECLARE
		@MYBOOKNUM INT,
		@MYBOOKTITLE VARCHAR(120),
		@BOOKCOUNT INT = 0,
		@MYAU INT;
DECLARE BOOKSREAD_C CURSOR FOR
SELECT DISTINCT BOOK_TITLE,B.BOOK_NUM,AU_ID
FROM FACT.BOOK B JOIN FACT.WRITES W ON B.BOOK_NUM = W.BOOK_NUM JOIN FACT.CHECKOUT C
	ON B.BOOK_NUM = C.BOOK_NUM
WHERE C.PAT_ID = @MYPAT;

BEGIN
	PRINT 'BOOK RECOMMENDATIONS';
	OPEN BOOKSREAD_C;
	FETCH NEXT FROM BOOKSREAD_C INTO @MYBOOKTITLE,@MYBOOKNUM, @MYAU;
	WHILE @@FETCH_STATUS = 0
		BEGIN
			PRINT CONCAT('Because you read: ',@MYBOOKNUM, ': ',@MYBOOKTITLE);
	DECLARE RECOMMEND_C CURSOR FOR SELECT B.BOOK_NUM,BOOK_TITLE
									 FROM FACT.BOOK B JOIN FACT.WRITES W ON
									 B.BOOK_NUM = W.BOOK_NUM
									 WHERE AU_ID = @MYAU AND B.BOOK_NUM != @MYBOOKNUM;
	BEGIN
		OPEN RECOMMEND_C;
		FETCH NEXT FROM RECOMMEND_C INTO @MYBOOKNUM,@MYBOOKTITLE;
		WHILE @@FETCH_STATUS = 0
			BEGIN
				PRINT CONCAT('    ',@MYBOOKNUM,': ',@MYBOOKTITLE);
				FETCH NEXT FROM RECOMMEND_C INTO @MYBOOKNUM, @MYBOOKTITLE;
			END;
			CLOSE RECOMMEND_C;
			DEALLOCATE RECOMMEND_C;
		END;
		SET @BOOKCOUNT += 1;
		FETCH NEXT FROM BOOKSREAD_C INTO @MYBOOKNUM,@MYBOOKTITLE;
	END;
	CLOSE BOOKSREAD_C;
	DEALLOCATE BOOKSREAD_C;
	PRINT CONCAT(@BOOKCOUNT, ' unique books in history');
END;

EXEC spRecommend 1160;
